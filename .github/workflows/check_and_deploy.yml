name: Run tests, dependency audit, CS fixer & deploy
on: [push]
jobs:
  check:
    name: Audit
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.2
      - name: Audit
        run: composer audit

  test:
    name: Unit tests on PHP ${{ matrix.php-versions }}
    needs: [ check ]
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        php-versions: [ '5.6', '7.0', '7.1', '7.4' ]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
      - name: Install dependencies
        run: composer install
      - name: Test
        run: composer test

  deploy:
    name: Deploy to GitHub
    needs: [check, test]
    runs-on: ubuntu-20.04
    if: startsWith(github.ref, 'refs/tags/') # only tags
    steps:
      - name: Get tag name
        id: set-tag
        run: echo "TAG_NAME=${GITHUB_REF:10}" >> $GITHUB_OUTPUT
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.0
      - name: Build ZIP
        run: ./release/build_release_package.sh
      - name: Release & upload
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.set-tag.outputs.TAG_NAME }}
          name: Shopgate Cart Integration Magento ${{ steps.set-tag.outputs.TAG_NAME }}
          draft: true
          prerelease: true
          fail_on_unmatched_files: true
          files: ./shopgate-module-${{ steps.set-tag.outputs.TAG_NAME }}.tgz

  notify-release-success:
    name: Notify developers of new release
    needs: [deploy]
    runs-on: ubuntu-20.04
    if: |
      success() &&
      startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Get tag name
        id: set-tag
        run: echo "TAG_NAME=${GITHUB_REF:10}" >> $GITHUB_OUTPUT
      - name: Notify on Slack
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_MERCHANT_UNIT }}
          SLACK_USERNAME: 'GitHub Actions'
          SLACK_ICON_EMOJI: ':octocat:'
          SLACK_TITLE: New release for ${{ github.repository }}
          SLACK_MESSAGE: Released version ${{ steps.set-tag.outputs.TAG_NAME }} of ${{ github.repository }}

  notify-release-fail:
    name: Notify developers of failed release
    needs: [deploy]
    runs-on: ubuntu-20.04
    if: |
      failure() &&
      startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Get tag name
        id: set-tag
        run: echo "TAG_NAME=${GITHUB_REF:10}" >> $GITHUB_OUTPUT
      - name: Notify on Slack
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_MERCHANT_UNIT }}
          SLACK_USERNAME: 'GitHub Actions'
          SLACK_ICON_EMOJI: ':octocat:'
          SLACK_COLOR: '#A30200'
          SLACK_TITLE: Release failed for ${{ github.repository }}
          SLACK_MESSAGE: Release failed for version ${{ steps.set-tag.outputs.TAG_NAME }} of ${{ github.repository }}
